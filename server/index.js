const express = require('express');
const path = require('path');
const helmet = require('helmet');
const send = require('send');
const compression = require('compression');

// API proxy
const proxy = require('./proxy');
const errorHandler = require('./errorHandler');

// asset manifest generated by create-react-app build
const manifest = require('../build/asset-manifest.json');

// The app server
const app = express();

// Guard the app ...
app.use(helmet());

// compress all responses
app.use(compression());

// Proxy the API
app.use('/api', proxy);

// Require HTTPS
if (process.env.NODE_ENV === 'production') {
    // Redirect http to https
    app.enable('trust proxy');
    app.use((req, res, next) => {
        if (req.secure) {
            next();
        } else {
            res.redirect('https://' + req.headers.host + req.url);
        }
    });
}

// special handling of webpack build asset files (needed for AEM Integration)
[{ f: 'main.css', t: 'css' }, { f: 'main.js', t: 'js' }].forEach(asset => {
    const etag = manifest[asset.f].match(/main\.([^\\.]+)\./);
    app.get(`/static/${asset.t}/${asset.f}`, (req, res) => {
        res.setHeader('ETag', etag[1]);
        send(req, path.join(__dirname, '..', 'build', manifest[asset.f])).pipe(res);
    });
});

// Serve the static content
app.use(express.static(path.join(__dirname, '..', 'build')));

// Direct all requests to the main page so they can be handled by React Router
app.get('/*', (req, res) => {
    res.sendFile(path.join(__dirname, '..', 'build', 'index.html'));
});

// error handler
app.use(errorHandler);

// Let's start ...
const port = process.env.PORT || 3001;
app.listen(port, err => {
    if (err) {
        console.log(`App crashed: ${err}`);
    } else {
        console.log(`Listening on port ${port}`);
    }
});
